{"version":3,"sources":["components/Button.jsx","components/Display.jsx","main/Calculator.jsx","reportWebVitals.js","index.js"],"names":["Button","props","classes","operation","double","triple","onClick","e","click","label","className","Display","value","initialState","displayValue","clearDisplay","values","current","Calculator","state","clearMemory","bind","setOperation","addDigit","this","setState","equals","currentOperation","n","includes","i","newValue","parseFloat","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4e95a7e.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nconst Button = props => {\n    let classes = 'button ';\n    classes += `${props.operation ? 'operation' : ''}`;\n    classes += `${props.double ? ' double' : ''}`;\n    classes += `${props.triple ? ' triple' : ''}`;\n\n    return (\n        <button\n            onClick={e => props.click && props.click(props.label)}\n            className={classes}>\n            { props.label }\n        </button>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport './Display.css';\n\nconst Display = props => {\n    return (\n        <div className=\"display\">{props.value}</div>\n    )\n};\n\nexport default Display;","import React, { Component } from 'react';\nimport './Calculator.css';\n\nimport Button from '../components/Button';\nimport Display from '../components/Display';\n\nconst initialState = {\n    displayValue: '0',\n    clearDisplay: false,\n    operation: null,\n    values: [0, 0],\n    current: 0\n};\n\nexport default class Calculator extends Component {\n    state = { ...initialState };\n\n    constructor(props) {\n        super(props);\n\n        this.clearMemory  = this.clearMemory.bind(this);\n        this.setOperation = this.setOperation.bind(this);\n        this.addDigit     = this.addDigit.bind(this);\n    }\n\n    clearMemory() {\n        this.setState({ ...initialState });\n    }\n\n    setOperation(operation) {\n        if (this.state.current === 0) {\n            this.setState({ operation, current: 1, clearDisplay: true });\n        } else {\n            const equals = operation === '=';\n            const currentOperation = this.state.operation;\n\n            const values = [...this.state.values];\n\n            switch (currentOperation) {\n                case '+':\n                    values[0] = values[0] + values[1]; \n                    break;\n                case '-':\n                    values[0] = values[0] - values[1];\n                    break;\n                case '*':\n                    values[0] = values[0] * values[1];\n                    break;\n                default:\n                    values[0] = values[0] / values[1];\n            }\n\n            values[1] = 0;\n\n            this.setState({\n                displayValue: values[0],\n                operation: equals ? null : operation,\n                current: equals ? 0 : 1,\n                clearDisplay: !equals,\n                values\n            })\n        }\n    }\n\n    addDigit(n) {\n        if (n === '.' && this.state.displayValue.includes('.')) {\n            return;\n        }\n\n        const clearDisplay = this.state.displayValue === '0'\n            || this.state.clearDisplay;\n\n        const currentValue = clearDisplay ? '' : this.state.displayValue;\n        const displayValue = currentValue + n;\n        this.setState({ displayValue, clearDisplay: false });\n\n        if (n !== '.') {\n            const i = this.state.current;\n            const newValue = parseFloat(displayValue);\n            const values = [...this.state.values];\n            values[i] = newValue;\n            this.setState({ values });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"calculator\">\n                <Display value={this.state.displayValue} />\n                <Button label=\"AC\" click={this.clearMemory} triple />\n                <Button label=\"/\" click={this.setOperation} operation />\n                <Button label=\"7\" click={this.addDigit} />\n                <Button label=\"8\" click={this.addDigit} />\n                <Button label=\"9\" click={this.addDigit} />\n                <Button label=\"*\" click={this.setOperation} operation />\n                <Button label=\"4\" click={this.addDigit} />\n                <Button label=\"5\" click={this.addDigit} />\n                <Button label=\"6\" click={this.addDigit} />\n                <Button label=\"-\" click={this.setOperation} operation />\n                <Button label=\"1\" click={this.addDigit} />\n                <Button label=\"2\" click={this.addDigit} />\n                <Button label=\"3\" click={this.addDigit} />\n                <Button label=\"+\" click={this.setOperation} operation />\n                <Button label=\"0\" click={this.addDigit} double />\n                <Button label=\".\" click={this.addDigit} />\n                <Button label=\"=\" click={this.setOperation} operation />\n            </div>\n        )\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>Calculadora</h1>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}